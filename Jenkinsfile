pipeline {
    agent any
    
    triggers {
        githubPush()
        pollSCM('H/5 * * * *')
    }
    
    environment {
        DOCS_BUILD_DIR = 'site'
        WEB_DIR = '/var/www/wiki'
    }
    
    stages {
        stage('üîÑ Checkout') {
            steps {
                echo 'üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–¥ –∏–∑ GitHub...'
                checkout scm
                
                echo 'üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–º–∏—Ç–µ:'
                sh '''
                    git log --oneline -1
                    echo "–í–µ—Ç–∫–∞: $(git branch --show-current || echo 'detached')"
                '''
            }
        }
        
        stage('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ MkDocs') {
            steps {
                echo 'üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é MkDocs...'
                sh '''
                    if [ -f "mkdocs.yml" ]; then
                        echo "‚úÖ –ù–∞–π–¥–µ–Ω mkdocs.yml"
                        mkdocs --version
                    else
                        echo "‚ùå mkdocs.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!"
                        exit 1
                    fi
                '''
            }
        }
        
        stage('üèóÔ∏è –°–±–æ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏') {
            steps {
                echo 'üèóÔ∏è –°–æ–±–∏—Ä–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é...'
                sh '''
                    rm -rf ${DOCS_BUILD_DIR}
                    mkdocs build --clean --verbose
                    
                    if [ -d "${DOCS_BUILD_DIR}" ] && [ "$(ls -A ${DOCS_BUILD_DIR})" ]; then
                        echo "‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
                        echo "üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–±–æ—Ä–∫–∏:"
                        ls -la ${DOCS_BUILD_DIR}/
                    else
                        echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏"
                        exit 1
                    fi
                '''
            }
        }
        
        stage('üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ') {
            steps {
                echo 'üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ–º –Ω–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä...'
                sh '''
                    if [ -d "${WEB_DIR}" ]; then
                        echo "üíæ –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é..."
                        cp -r ${WEB_DIR} ${WEB_DIR}.backup.$(date +%Y%m%d_%H%M%S)
                        ls -dt ${WEB_DIR}.backup.* 2>/dev/null | tail -n +6 | xargs rm -rf 2>/dev/null || true
                    fi
                    
                    mkdir -p ${WEB_DIR}
                    echo "üìã –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã..."
                    cp -r ${DOCS_BUILD_DIR}/* ${WEB_DIR}/
                    chown -R www-data:www-data ${WEB_DIR} 2>/dev/null || true
                    chmod -R 755 ${WEB_DIR}
                    echo "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
                '''
            }
        }
        
        stage('üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–π—Ç–∞') {
            steps {
                echo 'üß™ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞...'
                sh '''
                    if [ -f "${WEB_DIR}/index.html" ]; then
                        echo "‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞–π–¥–µ–Ω–∞"
                        if curl -s -o /dev/null -w "%{http_code}" http://localhost/ | grep -q "200"; then
                            echo "‚úÖ –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω"
                        else
                            echo "‚ö†Ô∏è –°–∞–π—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞)"
                        fi
                    else
                        echo "‚ùå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
                        exit 1
                    fi
                '''
            }
        }
    }
    
    post {
        success {
            echo 'üéâ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!'
            echo "üåê –°–∞–π—Ç: https://wiki.3b3t.fun/"
        }
        
        failure {
            echo '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏'
            echo 'üìß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Jenkins –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏'
        }
        
        always {
            echo 'üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...'
            sh 'rm -rf ${DOCS_BUILD_DIR} || true'
        }
    }
}
